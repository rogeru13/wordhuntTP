from cmu_graphics import *

class Track:
    def __init__(self):
        # Use exaggerated coordinates to create a curving, 3D-like perspective
        self.trackOuter = [(50, 450), (375, 450), (300, 150), (125, 150)]  # Outer boundary
        self.trackInner = [(100, 400), (325, 400), (275, 175), (150, 175)]  # Inner boundary

        # Colors for the track borders (vibrant)
        self.boundaryColors = ['red', 'blue', 'yellow', 'green', 'orange', 'cyan']

    def draw(self):
        # Draw the outer boundary of the track with a gradient to simulate depth
        drawPolygon(*[coord for point in self.trackOuter for coord in point], fill=gradient('gray', 'darkgray'))
        # Draw the inner green grassy area
        drawPolygon(*[coord for point in self.trackInner for coord in point], fill='green')

        # Draw colorful boundaries along the track edges (simulate popping colors)
        for i in range(len(self.trackOuter) - 1):
            drawLine(self.trackOuter[i][0], self.trackOuter[i][1], self.trackOuter[i + 1][0], self.trackOuter[i + 1][1],
                     fill=self.boundaryColors[i % len(self.boundaryColors)], lineWidth=15)
            drawLine(self.trackInner[i][0], self.trackInner[i][1], self.trackInner[i + 1][0], self.trackInner[i + 1][1],
                     fill=self.boundaryColors[i % len(self.boundaryColors)], lineWidth=10)

        # Adding dashed lines for road lanes (they get smaller toward the top to simulate depth)
        for i in range(5):
            y = 450 - i * 60
            x0 = 200 - i * 40
            x1 = 200 + i * 40
            drawLine(x0, y, x1, y, fill='white', lineWidth=5)

class Kart:
    def __init__(self, x, y, color):
        # Initialize the kart's position, color, and speed
        self.x = x
        self.y = y
        self.color = color
        self.speed = 10

    def move(self, dx, dy):
        # Move the kart based on input
        self.x += dx
        self.y += dy

    def draw(self):
        # Draw the kart with perspective-based size adjustment
        kartWidth = max(30 - (self.y // 10), 10)  # Kart shrinks as it moves up the track
        kartHeight = kartWidth // 2
        drawRect(self.x, self.y, kartWidth, kartHeight, fill=self.color)

def onAppStart(app):
    # Create the track and the kart
    app.track = Track()
    app.kart = Kart(200, 400, 'red')

def redrawAll(app):
    # Draw the track and the kart
    app.track.draw()
    app.kart.draw()

def onKeyPress(app, key):
    # Move the kart with the arrow keys
    if key == 'left':
        app.kart.move(-app.kart.speed, 0)
    elif key == 'right':
        app.kart.move(app.kart.speed, 0)
    elif key == 'up':
        app.kart.move(0, -app.kart.speed)
    elif key == 'down':
        app.kart.move(0, app.kart.speed)

def main():
    runApp()

main()
